// Code generated by SQLBoiler (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
	"strconv"

	"github.com/pkg/errors"
	"github.com/volatiletech/sqlboiler/boil"
	"github.com/volatiletech/sqlboiler/strmangle"
)

// M type is for providing columns and column values to UpdateAll.
type M map[string]interface{}

// ErrSyncFail occurs during insert when the record could not be retrieved in
// order to populate default value information. This usually happens when LastInsertId
// fails or there was a primary key configuration that was not resolvable.
var ErrSyncFail = errors.New("models: failed to synchronize data after insert")

type insertCache struct {
	query        string
	retQuery     string
	valueMapping []uint64
	retMapping   []uint64
}

type updateCache struct {
	query        string
	valueMapping []uint64
}

func makeCacheKey(cols boil.Columns, nzDefaults []string) string {
	buf := strmangle.GetBuffer()

	buf.WriteString(strconv.Itoa(cols.Kind))
	for _, w := range cols.Cols {
		buf.WriteString(w)
	}

	if len(nzDefaults) != 0 {
		buf.WriteByte('.')
	}
	for _, nz := range nzDefaults {
		buf.WriteString(nz)
	}

	str := buf.String()
	strmangle.PutBuffer(buf)
	return str
}

// Enum values for book.format
const (
	BookFormatEPUB  = "EPUB"
	BookFormatPDF   = "PDF"
	BookFormatAUDIO = "AUDIO"
	BookFormatVIDEO = "VIDEO"
)

// Enum values for book.content_type
const (
	BookContentTypeBook        = "book"
	BookContentTypeMagazine    = "magazine"
	BookContentTypeNewspaper   = "newspaper"
	BookContentTypeReport      = "report"
	BookContentTypePackage     = "package"
	BookContentTypeMicrobook   = "microbook"
	BookContentTypeComic       = "comic"
	BookContentTypePodcast     = "podcast"
	BookContentTypeMusic       = "music"
	BookContentTypeArticle     = "article"
	BookContentTypeSingleVideo = "single_video"
)

// Enum values for book.language
const (
	BookLanguageFARSI      = "FARSI"
	BookLanguageARABIC     = "ARABIC"
	BookLanguageENGLISH    = "ENGLISH"
	BookLanguageGERMAN     = "GERMAN"
	BookLanguageSPANISH    = "SPANISH"
	BookLanguageFRENCH     = "FRENCH"
	BookLanguageITALIAN    = "ITALIAN"
	BookLanguagePORTUGUESE = "PORTUGUESE"
)

// Enum values for book.base_price
const (
	BookBasePriceFIXED  = "FIXED"
	BookBasePriceTOMAN  = "TOMAN"
	BookBasePriceDOLLAR = "DOLLAR"
)

// Enum values for book.provider
const (
	BookProviderFIDIBO = "FIDIBO"
	BookProviderWILEY  = "WILEY"
	BookProviderTAYLOR = "TAYLOR"
)

// Enum values for book.suitable_for
const (
	BookSuitableForMEN   = "MEN"
	BookSuitableForWOMEN = "WOMEN"
	BookSuitableForBOTH  = "BOTH"
)

// Enum values for book_category.content_format
const (
	BookCategoryContentFormatEPUB  = "EPUB"
	BookCategoryContentFormatPDF   = "PDF"
	BookCategoryContentFormatAUDIO = "AUDIO"
)

// Enum values for flex_components.view_type
const (
	FlexComponentsViewTypeSINGLE   = "SINGLE"
	FlexComponentsViewTypeMULTIPLE = "MULTIPLE"
)

// Enum values for flex_pages.type
const (
	FlexPagesTypeSTATIC  = "STATIC"
	FlexPagesTypeDYNAMIC = "DYNAMIC"
)
